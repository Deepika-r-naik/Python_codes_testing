import requests

def fetch_data():
    url = "https://test/"
    headers = {'Authorization': 'Basic .........'}
    params = {'param1': 'value1', 'param2': 'value2'}

    try:
        response = requests.get(url, headers=headers, params=params)
        response.raise_for_status()

        if response.status_code == 200:
            uid_states = response.json()
            case_ids = []

            for uid, state in uid_states:
                if state != 'canceled':
                    case_ids.append(uid)

            fetched_data = {}

            for case_id in case_ids:
                data = fetch_case_data(case_id)
                fetched_data[case_id] = data

            return fetched_data

        else:
            print(f"Request was not successful. Status code: {response.status_code}")

    except requests.exceptions.RequestException as e:
        print(f"Error fetching data: {e}")

def fetch_case_data(case_id):
    url = f"https://test/{case_id}"
    headers = {'Authorization': 'Basic .........'}
    params = {'param1': 'value1', 'param2': 'value2'}

    try:
        response = requests.get(url, headers=headers, params=params)
        response.raise_for_status()

        if response.status_code == 200:
            data = response.json()
            return data

        else:
            print(f"Request for case ID {case_id} was not successful. Status code: {response.status_code}")

    except requests.exceptions.RequestException as e:
        print(f"Error fetching data for case ID {case_id}: {e}")

def main():
    fetched_data = fetch_data()
    print(fetched_data)

if __name__ == "__main__":
    main()
